@host=http://localhost:5000

@baseUrlForUsers=api/v1/user
@baseUrlForBootcamp=api/v1/bootcamp
@baseUrlForCourses=api/v1/course
@baseUrlForReviews=api/v1/review

### Mongo Shell Conection 
#   sudo ./mongo "mongodb+srv://admin:admin@cluster0.ydwzn.mongodb.net/dev-bp-node?retryWrites=true&w=majority"

### Get All Bootcamp
GET {{host}}/{{baseUrlForBootcamp}}?page=1 HTTP/1.1

### Filters With Mongoose
GET {{host}}/{{baseUrlForBootcamp}}?avgRating[lte]=2 HTTP/1.1

### Filter Through Array
GET {{host}}/{{baseUrlForBootcamp}}?careers[in]=Other HTTP/1.1

### Projection
GET {{host}}/{{baseUrlForBootcamp}}?select=name,description&careers[in]=Data Science

### Pagination 
GET {{host}}/{{baseUrlForBootcamp}}?select=name,description&limit=2&page=2


### Get Single Bootcamp
GET {{host}}/{{baseUrlForBootcamp}}/5f3c0039da90c1337899ce58 HTTP/1.1

### Create a Bootcamp
POST {{host}}/{{baseUrlForBootcamp}} HTTP/1.1
Content-Type: application/json

{
    "name": "gaurav talele",
    "description": "This is great course",
    "website": "http://gauravtalele.com",
    "email": "gauravtalele@gmail.com",
    "address": "jai durga mata complex, ulhasnagar",
    "careers": ["Data Science", "Other"],
    "avgRating": 5
}

### Checking Validations
POST {{host}}/{{baseUrlForBootcamp}} HTTP/1.1
Content-Type: application/json

{
    "website": "http://gauravtalele.com",
    "careers": ["Data Science", "Other"],
    "avgRating": 5
}

### Update a Bootcamp
PUT {{host}}/{{baseUrlForBootcamp}}/5f3c0039da90c1337899ce58 HTTP/1.1
Content-Type: application/json

{
    "name": "kajal talele",
    "description": "you are mad",
    "avgRating": 7
}

### Delete a Bootcamp
DELETE {{host}}/{{baseUrlForBootcamp}}/5d713995b721c3bb38c1f5d0 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{ loginResp.response.body.token }}

###############################  Courses  #########################################
### Get All Courses
GET {{host}}/{{baseUrlForCourses}} HTTP/1.1

### Get Courses by bootcampId: const router = express.Router({ mergeParams: true });
GET {{host}}/{{baseUrlForBootcamp}}/5d713995b721c3bb38c1f5d0/courses HTTP/1.1 

### Get Course By Id
GET {{host}}/{{baseUrlForCourses}}/5d725ce8c4ded7bcb480eaa3 HTTP/1.1

### Create A Course 
POST {{host}}/{{baseUrlForCourses}} HTTP/1.1
Content-Type: application/json

{
        "_id": "5d725cfec4ded7bcb480eaa6",
		"title": "Software QA",
		"description": "This course will teach you everything you need to know about quality assurance",
		"weeks": 6,
		"tuition": 5000,
		"minimumSkill": "intermediate",
		"scholarhipsAvailable": false,
		"bootcamp": "5d725a1b7b292f5f8ceff788",
		"user": "5c8a1d5b0190b214360dc032"
}

### Check Validations
POST {{host}}/{{baseUrlForCourses}} HTTP/1.1
Content-Type: application/json
{
        "_id": "5d725cfec4ded7bcb480eaa6",
		"bootcamp": "5d725a1b7b292f5f8ceff788",
		"user": "5c8a1d5b0190b214360dc032"
}

### Update A course

### Delete A course
DELETE {{host}}/{{baseUrlForCourses}}/5d725cfec4ded7bcb480eaa6


############################  Users  ###################################

### Get All Users
GET {{host}}/{{baseUrlForUsers}}/?page=1 HTTP/1.1

### Get Single User
GET {{host}}/{{baseUrlForUsers}}/ HTTP/1.1

### User Registration / Create a User
POST {{host}}/{{baseUrlForUsers}} HTTP/1.1
Content-Type: application/json
{
    "name": "Gaurav Talele",
    "email": "gauravtalele@gmail.com",
    "password": "qwerty@123",
    "role": "user"
}


### User Registration / Create a User - Admin 
POST {{host}}/{{baseUrlForUsers}} HTTP/1.1
Content-Type: application/json

{
    "name": "Kajal Talele",
    "email": "kajaltalele@gmail.com",
    "password": "qwerty@1234",
    "role": "admin"
}

### User Login
# @name loginResp
POST {{host}}/{{baseUrlForUsers}}/auth/login HTTP/1.1
Content-Type: application/json

{
    "email": "gauravtalele@gmail.com",
    "password": "qwerty@123"
}

### Admin Login
# @name loginResp
POST {{host}}/{{baseUrlForUsers}}/auth/login HTTP/1.1
Content-Type: application/json

{
    "email": "kajaltalele@gmail.com",
    "password": "qwerty@1234"
}

### Delete a Bootcamp
DELETE {{host}}/{{baseUrlForBootcamp}}/5d713a66ec8f2b88b8f830b8 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{ loginResp.response.body.token }}

### Get LoggedIn User
GET {{host}}/{{baseUrlForUsers}}/auth/me HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{ loginResp.response.body.token }}

### LogOut User
GET {{host}}/{{baseUrlForUsers}}/auth/logout HTTP/1.1
Content-Type: application/json

### After logout --> coockie gets cleared and we are not providing authorization header
### Pure Cookie based authentication
GET {{host}}/{{baseUrlForUsers}}/auth/me HTTP/1.1
Content-Type: application/json

### Update A User
PUT {{host}}/{{baseUrlForUsers}}/ HTTP/1.1
Content-Type: application/json

{

}

### Attack on login route --> /me --> Everthing Opens Up ==> Solution : Sanitize input
POST {{host}}/{{baseUrlForUsers}}/auth/login HTTP/1.1
Content-Type: application/json

{
    "email": { "$gt": "" },
    "password": "qwerty@123"
}

### Attack Uisng XSS Scripting : add malicious html/js code in request body



### Delete A User
DELETE {{host}}/{{baseUrlForUsers}}/ HTTP/1.1

############################  Reviews  ###################################
### Get All Reviews
GET {{host}}/{{baseUrlForReviews}} HTTP/1.1

### Get Single Review
GET {{host}}/{{baseUrlForReviews}}/ HTTP/1.1

### Create a Review
POST {{host}}/{{baseUrlForReviews}} HTTP/1.1
Content-Type: application/json

{

}
### Update A Review
PUT {{host}}/{{baseUrlForReviews}}/ HTTP/1.1
Content-Type: application/json

{

}

### Delete A Review
DELETE {{host}}/{{baseUrlForReviews}}/ HTTP/1.1
###




##################### Example of Using Response as Vriable ##################
@baseUrl = https://reqres.in

# @name users
GET {{baseUrl}}/api/users/2 

###
GET {{baseUrl}}/api/users/{{users.response.body.data.id}}

# https://marketplace.visualstudio.com/items?itemName=humao.rest-client#:~:text=http%20files%20are%20like%20this,panel%20of%20Visual%20Studio%20Code.
#############################################################################