package.json 

for linux based
"script": "NODE_ENV=production && nodemon index.json"

for windows 
setx NODE_ENV developement

setup basic express server


creating controllers for logic

to see the commit history 
>> git log --oneline

1. What is node js Middleware
npm install --save morgan

npm i --save colors

dry Principle
Dont Repeat Yourself

npm i --save slugify node-geocoder

GEOCODER_PROVIDER=mapquest

/?avgRating[lte]=2
/?avgRating[lte]=2&name=Devworks Bootcamp
/?careers[in]=Data Science


Query = Course.find().populate('bootcamp'); // Populates referenced document data also 
or
Query = Course.find().populate({
    path: 'bootcamp',
    select: 'name description'
})

=========================================================================

Now we want to publsh the actual documentation using docgen 

documentation: 
https://github.com/thedevsaddam/docgen

Installation:
curl https://raw.githubusercontent.com/thedevsaddam/docgen/v3/install.sh -o install.sh && sudo chmod +x install.sh && sudo ./install.sh

docgen build -i input-postman-collection.json -o ~/Downloads/index.md -m

==========================================================================

0)
npm i -g pm2
pm2 start app (or whatever your file name)

# Other pm2 commands
pm2 show app
pm2 status
pm2 restart app
pm2 stop app
pm2 logs (Show log stream)
pm2 flush (Clear logs)

# To make sure app starts when reboot
pm2 startup ubuntu


Add SSL and nginx 

tutorial: https://gist.github.com/bradtraversy/cd90d1ed3c462fe3bddd11bf8953a896

1) 
Setup Firewall
sudo ufw enable
sudo ufw status
sudo ufw allow ssh (Port 22)
sudo ufw allow http (Port 80)
sudo ufw allow https (Port 443)

2) 
sudo apt install nginx

sudo nano /etc/nginx/sites-available/default

    server_name yourdomain.com www.yourdomain.com;

    location / {
        proxy_pass http://localhost:5000; #whatever port your app runs on
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

# Check NGINX config
sudo nginx -t

# Restart NGINX
sudo service nginx restart

2.1)
add domain to vm
In Digital Ocean, go to networking and add a domain
Add an A record for @ and for www to your droplet


3) Lets Encrypt 
sudo add-apt-repository ppa:certbot/certbot
sudo apt-get update
sudo apt-get install python-certbot-nginx
sudo certbot --nginx -d yourdomain.com -d www.yourdomain.com

# Only valid for 90 days, test the renewal process with
certbot renew --dry-run

==================================================================================
